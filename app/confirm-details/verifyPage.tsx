/* eslint-disable @typescript-eslint/no-unused-vars */
// @ts-nocheck
"use client";
import Navbar from "@/components/navbar";
import CountdownTimer from "@/components/timer";
import { createLead, updateContactToDroppedOff } from "@/lib/ghlActions";
import apiService from "@/services/api";
import { AnimatePresence, motion } from "framer-motion";
import { useSearchParams } from "next/navigation";
import React, { useEffect, useRef, useState } from "react";
import { TbLoader2 } from "react-icons/tb";

// import Image from 'next/image';

// TypeScript interfaces
interface FormData {
  firstName: string;
  lastName: string;
  email: string;
}

interface TimeLeft {
  minutes: number;
  seconds: number;
}

type StepStatus = "active" | "completed" | "upcoming";

interface Step {
  id: "select-plan" | "sign-up" | "card-verification";
  label: string;
  status: StepStatus;
}

const VerificationPage: React.FC = () => {
  const searchParams = useSearchParams();
  // Form state
  const [formData, setFormData] = useState<FormData>({
    firstName: "",
    lastName: "",
    email: "",
  });
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  const planId = searchParams.get("planId") || null;
  const funnel = searchParams.get("funnel") || null;

  // Steps state
  const [steps, setSteps] = useState<Step[]>([
    { id: "select-plan", label: "Select Plan", status: "completed" },
    { id: "sign-up", label: "Sign-up", status: "active" },
    { id: "card-verification", label: "Card Verification", status: "upcoming" },
  ]);

  // Timer state
  const [timeLeft, setTimeLeft] = useState<TimeLeft>({
    minutes: 9,
    seconds: 56,
  });

  const videoRef = useRef<HTMLDivElement>(null);

  const droppedOffTags =
    funnel === "autoApply" ? ["F2-auto-dropped_off"] : ["F3-vbp-dropped_off"];

  const leadsTags =
    funnel === "autoApply" ? ["F2-auto-leads"] : ["F3-vbp-leads"];

  const xSignature =
    funnel === "autoApply"
      ? process.env.NEXT_PUBLIC_AUTO_X_SIGNATURE
      : process.env.NEXT_PUBLIC_VBP_X_SIGNATURE;
  // Handle input changes
  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setFormData((prev) => ({
      ...prev,
      [name]: value,
    }));
  };

  const createLightforthPartnerUser = async () => {
    try {
      const response = await apiService.post(
        "/account/create-lightforth-partner-user",
        {
          ...formData,
          source: "funnel",
        },
        {
          headers: {
            "x-signature": xSignature || "",
          },
        }
      );
      if (!response?.response?.newPartnerUser?.authorizerId) {
        throw new Error(
          response?.response?.authorizer?.message || "This user already exists"
        );
      }
      return response?.response.newPartnerUser.authorizerId;
    } catch (error) {
      console.error("Error creating partner user:", error);
      throw error;
    }
  };

  const createUserSub = async (
    planId: string,
    authorizerId: string,
    contactId: string
  ) => {
    try {
      const payload: {
        planId: string;
        authorizerId: string;
        contactId: string;
      } = {
        planId,
        authorizerId,
        contactId,
      };

      const response = await apiService.post(
        "/account/create-lightforth-partner-user-subscription",
        payload,
        {
          headers: {
            "x-signature": xSignature || "",
          },
        }
      );

      if (response.statusCode !== 200) {
        throw new Error("Failed to create subscription");
      }

      const paymentLink = response.response?.paymentLink?.data;

      if (!paymentLink) {
        throw new Error("Payment link not found");
      }

      await updateContactToDroppedOff(contactId, droppedOffTags);

      // Load the payment URL in the current window
      window.location.href = paymentLink;

      return true;
    } catch (error) {
      console.error("Error creating subscription:", error);
      throw error;
    }
  };

  // Handle form submission
  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    setIsLoading(true);
    setError(null);

    // Update steps status
    const updatedSteps = steps.map((step) => {
      if (step.id === "sign-up")
        return { ...step, status: "completed" as StepStatus };
      if (step.id === "card-verification")
        return { ...step, status: "active" as StepStatus };
      return step;
    });

    setSteps(updatedSteps);

    try {
      if (!planId) {
        throw new Error("Plan ID is missing");
      }

      // Then create the partner user
      const userAuthId = await createLightforthPartnerUser();
      if (!userAuthId) {
        throw new Error("Failed to create partner user");
      }

      const contactId = await createLead(formData, leadsTags);
      if (!contactId) {
        throw new Error("Failed to create lead");
      }

      // Finally create the subscription
      await createUserSub(planId, userAuthId, contactId);

      // Success message could be added here
      console.log("User subscription created successfully");
      // Note: No need to set loading to false since we're redirecting
    } catch (err) {
      setError(
        err instanceof Error ? err.message : "An unknown error occurred"
      );
      console.error("Submission error:", err);
      setIsLoading(false); // Only set loading to false on error, as success redirects page
    }
  };

  // Countdown timer effect
  useEffect(() => {
    const timer = setInterval(() => {
      setTimeLeft((prev) => {
        if (prev.seconds > 0) {
          return { ...prev, seconds: prev.seconds - 1 };
        } else if (prev.minutes > 0) {
          return { minutes: prev.minutes - 1, seconds: 59 };
        } else {
          clearInterval(timer);
          return prev;
        }
      });
    }, 1000);

    return () => clearInterval(timer);
  }, []);

  return (
    <div className="min-h-screen bg-white relative overflow-hidden">
      <Navbar onClickScroll={() => console.log("")} />

      <div className="relative w-full max-w-[70%] mx-auto px-4 py-8 mt-12">
        {/* Progress Steps */}
        <div className="flex flex-wrap justify-center sm:justify-end mb-12 gap-4">
          {steps.map((step, index) => (
            <React.Fragment key={step.id}>
              {index > 0 && (
                <div className="hidden sm:flex items-center">
                  <div className="w-8 h-[1px] bg-gray-300"></div>
                </div>
              )}
              <div className="flex items-center">
                <div
                  className={`w-6 h-6 rounded-full flex items-center justify-center text-xs ${
                    step.status === "completed"
                      ? "bg-[#1b9dfc] text-white"
                      : step.status === "active"
                      ? "border border-blue-500 text-blue-500"
                      : "border border-gray-300 text-gray-400"
                  }`}
                >
                  {step.status === "completed" ? (
                    <svg
                      className="w-3 h-3"
                      fill="currentColor"
                      viewBox="0 0 20 20"
                    >
                      <path
                        fillRule="evenodd"
                        d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                        clipRule="evenodd"
                      />
                    </svg>
                  ) : (
                    <span>{index + 1}</span>
                  )}
                </div>
                <span
                  className={`ml-2 text-sm ${
                    step.status === "active"
                      ? "text-blue-500 font-medium"
                      : "text-gray-500"
                  }`}
                >
                  {step.label}
                </span>
              </div>
            </React.Fragment>
          ))}
        </div>
        {/* Headline with blue underline */}
        <div className="flex justify-center items-center text-center mb-10 relative">
          <svg
            width="566"
            height="140"
            viewBox="0 0 566 140"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M39.2344 54.6953C38.0039 55.8906 36.5449 56.8281 34.8574 57.5078C33.1699 58.1875 31.3359 58.5273 29.3555 58.5273C27.3516 58.5273 25.5059 58.1875 23.8184 57.5078C22.1309 56.8164 20.6602 55.8555 19.4062 54.625C18.1641 53.3828 17.1973 51.9297 16.5059 50.2656C15.8145 48.6016 15.4688 46.7852 15.4688 44.8164C15.4688 42.8477 15.8145 41.0312 16.5059 39.3672C17.1973 37.6914 18.1641 36.2383 19.4062 35.0078C20.6602 33.7773 22.1309 32.8223 23.8184 32.1426C25.5059 31.4512 27.3516 31.1055 29.3555 31.1055C31.3242 31.1055 33.1465 31.4453 34.8223 32.125C36.5098 32.8047 37.9688 33.748 39.1992 34.9551L35.4199 38.752C34.6816 37.8496 33.7793 37.1406 32.7129 36.625C31.6582 36.0977 30.5098 35.834 29.2676 35.834C28.084 35.834 26.9883 36.0625 25.9805 36.5195C24.9844 36.9648 24.1113 37.5977 23.3613 38.418C22.6113 39.2266 22.0312 40.1758 21.6211 41.2656C21.2109 42.3555 21.0059 43.5332 21.0059 44.7988C21.0059 46.0879 21.2109 47.2773 21.6211 48.3672C22.0312 49.457 22.6113 50.4121 23.3613 51.2324C24.1113 52.041 24.9844 52.6738 25.9805 53.1309C26.9883 53.5762 28.084 53.7988 29.2676 53.7988C30.5098 53.7988 31.6582 53.541 32.7129 53.0254C33.7676 52.498 34.6641 51.7832 35.4023 50.8809L39.2344 54.6953ZM55.0027 58.5273C52.9988 58.5273 51.1472 58.1875 49.448 57.5078C47.7605 56.8164 46.2898 55.8555 45.0359 54.625C43.7937 53.3828 42.8269 51.9297 42.1355 50.2656C41.4558 48.6016 41.1159 46.7852 41.1159 44.8164C41.1159 42.8477 41.4558 41.0312 42.1355 39.3672C42.8269 37.6914 43.7937 36.2383 45.0359 35.0078C46.2898 33.7656 47.7605 32.8047 49.448 32.125C51.1472 31.4453 52.9988 31.1055 55.0027 31.1055C57.0066 31.1055 58.8523 31.4512 60.5398 32.1426C62.2273 32.8223 63.6863 33.7773 64.9167 35.0078C66.1589 36.2383 67.1257 37.6855 67.8171 39.3496C68.5085 41.0137 68.8542 42.8359 68.8542 44.8164C68.8542 46.7852 68.5085 48.6074 67.8171 50.2832C67.1374 51.9473 66.1765 53.3945 64.9343 54.625C63.6921 55.8555 62.2273 56.8164 60.5398 57.5078C58.8523 58.1875 57.0066 58.5273 55.0027 58.5273ZM55.0027 53.7988C56.1863 53.7988 57.282 53.5703 58.2898 53.1133C59.3093 52.6562 60.1941 52.0234 60.9441 51.2148C61.6941 50.3945 62.2741 49.4453 62.6843 48.3672C63.1062 47.2773 63.3171 46.0938 63.3171 44.8164C63.3171 43.5391 63.1062 42.3555 62.6843 41.2656C62.2741 40.1758 61.6941 39.2266 60.9441 38.418C60.1941 37.5977 59.3093 36.9648 58.2898 36.5195C57.282 36.0625 56.1863 35.834 55.0027 35.834C53.8073 35.834 52.6999 36.0625 51.6804 36.5195C50.6726 36.9648 49.7878 37.5977 49.0261 38.418C48.2761 39.2266 47.6902 40.1758 47.2683 41.2656C46.8581 42.3555 46.653 43.5391 46.653 44.8164C46.653 46.0938 46.8581 47.2773 47.2683 48.3672C47.6902 49.457 48.2761 50.4121 49.0261 51.2324C49.7878 52.041 50.6726 52.6738 51.6804 53.1309C52.6999 53.5762 53.8073 53.7988 55.0027 53.7988ZM95.4682 58H89.2455L76.9233 40V58H71.5092V31.6328H77.7319L90.0541 49.668V31.6328H95.4682V58ZM118.11 38.2598C117.336 37.4863 116.41 36.8887 115.332 36.4668C114.266 36.0449 113.123 35.834 111.904 35.834C110.686 35.834 109.572 36.0449 108.565 36.4668C107.557 36.8887 106.69 37.4922 105.963 38.2773C105.236 39.0625 104.674 40 104.276 41.0898C103.877 42.168 103.678 43.375 103.678 44.7109C103.678 46.0469 103.877 47.2715 104.276 48.3848C104.686 49.498 105.26 50.459 105.998 51.2676C106.748 52.0645 107.633 52.6855 108.652 53.1309C109.684 53.5762 110.82 53.7988 112.063 53.7988C113.094 53.7988 114.037 53.6406 114.893 53.3242C115.76 53.0078 116.522 52.5566 117.178 51.9707C117.834 51.3848 118.373 50.6758 118.795 49.8438C119.229 49.0117 119.527 48.0801 119.692 47.0488H112.045V42.918H124.455L124.613 44.957C124.613 46.9609 124.303 48.7949 123.682 50.459C123.072 52.123 122.205 53.5586 121.08 54.7656C119.955 55.9609 118.613 56.8867 117.055 57.543C115.508 58.1992 113.791 58.5273 111.904 58.5273C109.947 58.5273 108.131 58.1816 106.455 57.4902C104.791 56.7988 103.332 55.832 102.078 54.5898C100.836 53.3477 99.8693 51.8945 99.1779 50.2305C98.4865 48.5547 98.1408 46.7441 98.1408 44.7988C98.1408 42.8535 98.4806 41.0547 99.1603 39.4023C99.8517 37.7383 100.813 36.2852 102.043 35.043C103.285 33.8008 104.733 32.834 106.385 32.1426C108.037 31.4512 109.836 31.1055 111.781 31.1055C113.598 31.1055 115.356 31.4219 117.055 32.0547C118.754 32.6875 120.272 33.5898 121.608 34.7617L118.11 38.2598ZM149.241 58H143.247L137.71 48.4727H132.683V58H127.268V31.6328H137.956C140.077 31.6328 141.893 31.9668 143.405 32.6348C144.917 33.3027 146.071 34.2695 146.868 35.5352C147.677 36.7891 148.081 38.2949 148.081 40.0527C148.081 41.8574 147.653 43.3984 146.798 44.6758C145.954 45.9414 144.747 46.8906 143.177 47.5234L149.241 58ZM132.683 44.166H137.552C139.157 44.166 140.388 43.832 141.243 43.1641C142.11 42.4844 142.544 41.5176 142.544 40.2637C142.544 39.0098 142.11 38.0488 141.243 37.3809C140.388 36.7012 139.157 36.3613 137.552 36.3613H132.683V44.166ZM155.359 58H149.681L160.193 31.6328H165.906L176.4 58H170.722L168.56 52.3398H157.521L155.359 58ZM159.296 47.5938H166.802L163.041 37.8203L159.296 47.5938ZM187.879 58H182.465V36.3613H174.696V31.6328H195.666V36.3613H187.879V58ZM220.487 31.6328V46.1348C220.487 48.7129 220.024 50.9277 219.099 52.7793C218.185 54.6309 216.866 56.0547 215.144 57.0508C213.433 58.0352 211.376 58.5273 208.974 58.5273C206.583 58.5273 204.526 58.0352 202.804 57.0508C201.081 56.0547 199.757 54.6309 198.831 52.7793C197.917 50.9277 197.46 48.7129 197.46 46.1348V31.6328H202.874V45.4668C202.874 47.3066 203.103 48.8418 203.56 50.0723C204.028 51.3027 204.714 52.2344 205.616 52.8672C206.519 53.4883 207.638 53.7988 208.974 53.7988C210.31 53.7988 211.429 53.4883 212.331 52.8672C213.233 52.2344 213.913 51.3027 214.37 50.0723C214.839 48.8418 215.073 47.3066 215.073 45.4668V31.6328H220.487ZM241.283 58H224.056V31.6328H229.47V53.2715H241.283V58ZM247.401 58H241.723L252.235 31.6328H257.948L268.442 58H262.764L260.602 52.3398H249.563L247.401 58ZM251.338 47.5938H258.844L255.083 37.8203L251.338 47.5938ZM279.921 58H274.507V36.3613H266.737V31.6328H287.708V36.3613H279.921V58ZM289.502 58V31.6328H294.916V58H289.502ZM311.458 58.5273C309.454 58.5273 307.602 58.1875 305.903 57.5078C304.215 56.8164 302.745 55.8555 301.491 54.625C300.249 53.3828 299.282 51.9297 298.59 50.2656C297.911 48.6016 297.571 46.7852 297.571 44.8164C297.571 42.8477 297.911 41.0312 298.59 39.3672C299.282 37.6914 300.249 36.2383 301.491 35.0078C302.745 33.7656 304.215 32.8047 305.903 32.125C307.602 31.4453 309.454 31.1055 311.458 31.1055C313.462 31.1055 315.307 31.4512 316.995 32.1426C318.682 32.8223 320.141 33.7773 321.372 35.0078C322.614 36.2383 323.581 37.6855 324.272 39.3496C324.964 41.0137 325.309 42.8359 325.309 44.8164C325.309 46.7852 324.964 48.6074 324.272 50.2832C323.592 51.9473 322.631 53.3945 321.389 54.625C320.147 55.8555 318.682 56.8164 316.995 57.5078C315.307 58.1875 313.462 58.5273 311.458 58.5273ZM311.458 53.7988C312.641 53.7988 313.737 53.5703 314.745 53.1133C315.764 52.6562 316.649 52.0234 317.399 51.2148C318.149 50.3945 318.729 49.4453 319.139 48.3672C319.561 47.2773 319.772 46.0938 319.772 44.8164C319.772 43.5391 319.561 42.3555 319.139 41.2656C318.729 40.1758 318.149 39.2266 317.399 38.418C316.649 37.5977 315.764 36.9648 314.745 36.5195C313.737 36.0625 312.641 35.834 311.458 35.834C310.262 35.834 309.155 36.0625 308.135 36.5195C307.128 36.9648 306.243 37.5977 305.481 38.418C304.731 39.2266 304.145 40.1758 303.723 41.2656C303.313 42.3555 303.108 43.5391 303.108 44.8164C303.108 46.0938 303.313 47.2773 303.723 48.3672C304.145 49.457 304.731 50.4121 305.481 51.2324C306.243 52.041 307.128 52.6738 308.135 53.1309C309.155 53.5762 310.262 53.7988 311.458 53.7988ZM351.923 58H345.701L333.378 40V58H327.964V31.6328H334.187L346.509 49.668V31.6328H351.923V58ZM354.279 55.1523L356.846 51.0215C357.654 51.6777 358.434 52.2168 359.184 52.6387C359.945 53.0488 360.695 53.3535 361.434 53.5527C362.172 53.7402 362.928 53.834 363.701 53.834C364.615 53.834 365.406 53.7051 366.074 53.4473C366.742 53.1895 367.258 52.8203 367.621 52.3398C367.996 51.8594 368.184 51.3027 368.184 50.6699C368.184 49.9316 367.949 49.3105 367.481 48.8066C367.012 48.3027 366.397 47.8633 365.635 47.4883C364.885 47.1016 364.07 46.7324 363.191 46.3809C362.336 46.0293 361.475 45.6484 360.608 45.2383C359.752 44.8164 358.961 44.3184 358.234 43.7441C357.52 43.1699 356.94 42.4727 356.494 41.6523C356.061 40.8203 355.844 39.8125 355.844 38.6289C355.844 37.082 356.231 35.7461 357.004 34.6211C357.789 33.4961 358.861 32.6289 360.221 32.0195C361.58 31.4102 363.133 31.1055 364.879 31.1055C366.109 31.1055 367.387 31.2695 368.711 31.5977C370.047 31.9258 371.377 32.4238 372.701 33.0918L370.574 37.4688C369.742 36.9648 368.846 36.5664 367.885 36.2734C366.924 35.9805 366.022 35.834 365.178 35.834C364.416 35.834 363.748 35.9512 363.174 36.1855C362.611 36.4199 362.172 36.748 361.856 37.1699C361.539 37.5801 361.381 38.0664 361.381 38.6289C361.381 39.2969 361.609 39.877 362.066 40.3691C362.524 40.8496 363.115 41.2773 363.842 41.6523C364.58 42.0273 365.371 42.4023 366.215 42.7773C367.082 43.1523 367.955 43.5625 368.834 44.0078C369.725 44.4531 370.533 44.9805 371.26 45.5898C371.998 46.1875 372.59 46.9082 373.035 47.752C373.492 48.584 373.721 49.5859 373.721 50.7578C373.721 52.3047 373.311 53.6641 372.49 54.8359C371.67 55.9961 370.527 56.9043 369.063 57.5605C367.598 58.2051 365.893 58.5273 363.947 58.5273C362.166 58.5273 360.461 58.2402 358.832 57.666C357.203 57.0918 355.686 56.2539 354.279 55.1523ZM379.891 50.7578H377.149L376.464 31.6328H380.577L379.891 50.7578ZM378.503 58.3516C377.835 58.3516 377.272 58.123 376.815 57.666C376.358 57.209 376.13 56.6582 376.13 56.0137C376.13 55.3574 376.358 54.8066 376.815 54.3613C377.272 53.9043 377.835 53.6758 378.503 53.6758C379.182 53.6758 379.751 53.9043 380.208 54.3613C380.677 54.8066 380.911 55.3574 380.911 56.0137C380.911 56.6582 380.677 57.209 380.208 57.666C379.751 58.123 379.182 58.3516 378.503 58.3516ZM405.17 58H399.756V46.7324L389.772 31.6328H396.346L402.428 41.9688L408.58 31.6328H415.155L405.17 46.75V58ZM428.251 58.5273C426.247 58.5273 424.395 58.1875 422.696 57.5078C421.009 56.8164 419.538 55.8555 418.284 54.625C417.042 53.3828 416.075 51.9297 415.384 50.2656C414.704 48.6016 414.364 46.7852 414.364 44.8164C414.364 42.8477 414.704 41.0312 415.384 39.3672C416.075 37.6914 417.042 36.2383 418.284 35.0078C419.538 33.7656 421.009 32.8047 422.696 32.125C424.395 31.4453 426.247 31.1055 428.251 31.1055C430.255 31.1055 432.101 31.4512 433.788 32.1426C435.476 32.8223 436.935 33.7773 438.165 35.0078C439.407 36.2383 440.374 37.6855 441.065 39.3496C441.757 41.0137 442.103 42.8359 442.103 44.8164C442.103 46.7852 441.757 48.6074 441.065 50.2832C440.386 51.9473 439.425 53.3945 438.183 54.625C436.94 55.8555 435.476 56.8164 433.788 57.5078C432.101 58.1875 430.255 58.5273 428.251 58.5273ZM428.251 53.7988C429.435 53.7988 430.53 53.5703 431.538 53.1133C432.558 52.6562 433.442 52.0234 434.192 51.2148C434.942 50.3945 435.522 49.4453 435.933 48.3672C436.354 47.2773 436.565 46.0938 436.565 44.8164C436.565 43.5391 436.354 42.3555 435.933 41.2656C435.522 40.1758 434.942 39.2266 434.192 38.418C433.442 37.5977 432.558 36.9648 431.538 36.5195C430.53 36.0625 429.435 35.834 428.251 35.834C427.056 35.834 425.948 36.0625 424.929 36.5195C423.921 36.9648 423.036 37.5977 422.274 38.418C421.524 39.2266 420.938 40.1758 420.517 41.2656C420.106 42.3555 419.901 43.5391 419.901 44.8164C419.901 46.0938 420.106 47.2773 420.517 48.3672C420.938 49.457 421.524 50.4121 422.274 51.2324C423.036 52.041 423.921 52.6738 424.929 53.1309C425.948 53.5762 427.056 53.7988 428.251 53.7988ZM467.785 31.6328V46.1348C467.785 48.7129 467.322 50.9277 466.396 52.7793C465.482 54.6309 464.164 56.0547 462.441 57.0508C460.73 58.0352 458.674 58.5273 456.271 58.5273C453.881 58.5273 451.824 58.0352 450.101 57.0508C448.379 56.0547 447.054 54.6309 446.129 52.7793C445.215 50.9277 444.758 48.7129 444.758 46.1348V31.6328H450.172V45.4668C450.172 47.3066 450.4 48.8418 450.857 50.0723C451.326 51.3027 452.011 52.2344 452.914 52.8672C453.816 53.4883 454.935 53.7988 456.271 53.7988C457.607 53.7988 458.726 53.4883 459.629 52.8672C460.531 52.2344 461.211 51.3027 461.668 50.0723C462.136 48.8418 462.371 47.3066 462.371 45.4668V31.6328H467.785ZM493.327 58H487.332L481.795 48.4727H476.768V58H471.354V31.6328H482.041C484.163 31.6328 485.979 31.9668 487.491 32.6348C489.002 33.3027 490.157 34.2695 490.954 35.5352C491.762 36.7891 492.166 38.2949 492.166 40.0527C492.166 41.8574 491.739 43.3984 490.883 44.6758C490.039 45.9414 488.832 46.8906 487.262 47.5234L493.327 58ZM476.768 44.166H481.637C483.243 44.166 484.473 43.832 485.329 43.1641C486.196 42.4844 486.629 41.5176 486.629 40.2637C486.629 39.0098 486.196 38.0488 485.329 37.3809C484.473 36.7012 483.243 36.3613 481.637 36.3613H476.768V44.166ZM497.037 64.3281L496.773 59.5996C498.824 59.5996 500.348 59.1133 501.344 58.1406C502.34 57.168 502.838 55.7031 502.838 53.7461V31.6328H508.252V53.6758C508.252 56.207 507.871 58.252 507.109 59.8105C506.359 61.3809 505.158 62.5234 503.506 63.2383C501.865 63.9648 499.709 64.3281 497.037 64.3281ZM524.811 58.5273C522.807 58.5273 520.956 58.1875 519.256 57.5078C517.569 56.8164 516.098 55.8555 514.844 54.625C513.602 53.3828 512.635 51.9297 511.944 50.2656C511.264 48.6016 510.924 46.7852 510.924 44.8164C510.924 42.8477 511.264 41.0312 511.944 39.3672C512.635 37.6914 513.602 36.2383 514.844 35.0078C516.098 33.7656 517.569 32.8047 519.256 32.125C520.956 31.4453 522.807 31.1055 524.811 31.1055C526.815 31.1055 528.661 31.4512 530.348 32.1426C532.036 32.8223 533.495 33.7773 534.725 35.0078C535.967 36.2383 536.934 37.6855 537.626 39.3496C538.317 41.0137 538.663 42.8359 538.663 44.8164C538.663 46.7852 538.317 48.6074 537.626 50.2832C536.946 51.9473 535.985 53.3945 534.743 54.625C533.501 55.8555 532.036 56.8164 530.348 57.5078C528.661 58.1875 526.815 58.5273 524.811 58.5273ZM524.811 53.7988C525.995 53.7988 527.09 53.5703 528.098 53.1133C529.118 52.6562 530.003 52.0234 530.753 51.2148C531.503 50.3945 532.083 49.4453 532.493 48.3672C532.915 47.2773 533.126 46.0938 533.126 44.8164C533.126 43.5391 532.915 42.3555 532.493 41.2656C532.083 40.1758 531.503 39.2266 530.753 38.418C530.003 37.5977 529.118 36.9648 528.098 36.5195C527.09 36.0625 525.995 35.834 524.811 35.834C523.616 35.834 522.508 36.0625 521.489 36.5195C520.481 36.9648 519.596 37.5977 518.835 38.418C518.085 39.2266 517.499 40.1758 517.077 41.2656C516.667 42.3555 516.461 43.5391 516.461 44.8164C516.461 46.0938 516.667 47.2773 517.077 48.3672C517.499 49.457 518.085 50.4121 518.835 51.2324C519.596 52.041 520.481 52.6738 521.489 53.1309C522.508 53.5762 523.616 53.7988 524.811 53.7988ZM541.318 58V31.6328H551.073C553.909 31.6328 556.107 32.2363 557.665 33.4434C559.236 34.6387 560.021 36.3203 560.021 38.4883C560.021 39.8125 559.71 40.9844 559.089 42.0039C558.468 43.0117 557.63 43.7793 556.575 44.3066C558.075 44.752 559.241 45.5195 560.073 46.6094C560.917 47.6875 561.339 49.0117 561.339 50.582C561.339 52.082 560.97 53.3887 560.232 54.502C559.505 55.6035 558.474 56.4648 557.138 57.0859C555.814 57.6953 554.255 58 552.462 58H541.318ZM546.732 42.6719H550.775C551.982 42.6719 552.937 42.3848 553.64 41.8105C554.343 41.2363 554.695 40.457 554.695 39.4727C554.695 38.5117 554.337 37.7559 553.622 37.2051C552.919 36.6426 551.941 36.3613 550.687 36.3613H546.732V42.6719ZM546.732 53.2715H551.109C552.07 53.2715 552.902 53.1367 553.605 52.8672C554.308 52.5859 554.847 52.1934 555.222 51.6895C555.609 51.1738 555.802 50.5762 555.802 49.8965C555.802 49.2168 555.626 48.6367 555.275 48.1562C554.935 47.6758 554.437 47.3125 553.781 47.0664C553.124 46.8086 552.345 46.6797 551.443 46.6797H546.732V53.2715ZM94.5028 99.1523L97.0692 95.0215C97.8778 95.6777 98.6571 96.2168 99.4071 96.6387C100.169 97.0488 100.919 97.3535 101.657 97.5527C102.395 97.7402 103.151 97.834 103.925 97.834C104.839 97.834 105.63 97.7051 106.298 97.4473C106.966 97.1895 107.481 96.8203 107.845 96.3398C108.22 95.8594 108.407 95.3027 108.407 94.6699C108.407 93.9316 108.173 93.3105 107.704 92.8066C107.235 92.3027 106.62 91.8633 105.858 91.4883C105.108 91.1016 104.294 90.7324 103.415 90.3809C102.559 90.0293 101.698 89.6484 100.831 89.2383C99.9755 88.8164 99.1844 88.3184 98.4579 87.7441C97.743 87.1699 97.163 86.4727 96.7177 85.6523C96.2841 84.8203 96.0673 83.8125 96.0673 82.6289C96.0673 81.082 96.454 79.7461 97.2274 78.6211C98.0126 77.4961 99.0848 76.6289 100.444 76.0195C101.804 75.4102 103.356 75.1055 105.102 75.1055C106.333 75.1055 107.61 75.2695 108.934 75.5977C110.27 75.9258 111.6 76.4238 112.925 77.0918L110.798 81.4688C109.966 80.9648 109.069 80.5664 108.108 80.2734C107.147 79.9805 106.245 79.834 105.401 79.834C104.64 79.834 103.972 79.9512 103.397 80.1855C102.835 80.4199 102.395 80.748 102.079 81.1699C101.763 81.5801 101.604 82.0664 101.604 82.6289C101.604 83.2969 101.833 83.877 102.29 84.3691C102.747 84.8496 103.339 85.2773 104.065 85.6523C104.804 86.0273 105.595 86.4023 106.438 86.7773C107.306 87.1523 108.179 87.5625 109.057 88.0078C109.948 88.4531 110.757 88.9805 111.483 89.5898C112.222 90.1875 112.813 90.9082 113.259 91.752C113.716 92.584 113.944 93.5859 113.944 94.7578C113.944 96.3047 113.534 97.6641 112.714 98.8359C111.893 99.9961 110.751 100.904 109.286 101.561C107.821 102.205 106.116 102.527 104.171 102.527C102.39 102.527 100.684 102.24 99.0555 101.666C97.4266 101.092 95.9091 100.254 94.5028 99.1523ZM116.634 102V75.6328H133.65V80.3613H122.048V86.3555H132.929V91.1016H122.048V97.2715H133.826V102H116.634ZM141.174 102H135.496L146.008 75.6328H151.721L162.215 102H156.537L154.375 96.3398H143.336L141.174 102ZM145.112 91.5938H152.617L148.856 81.8203L145.112 91.5938ZM186.034 102H180.04L174.503 92.4727H169.476V102H164.062V75.6328H174.749C176.87 75.6328 178.687 75.9668 180.198 76.6348C181.71 77.3027 182.864 78.2695 183.661 79.5352C184.47 80.7891 184.874 82.2949 184.874 84.0527C184.874 85.8574 184.446 87.3984 183.591 88.6758C182.747 89.9414 181.54 90.8906 179.97 91.5234L186.034 102ZM169.476 88.166H174.345C175.95 88.166 177.181 87.832 178.036 87.1641C178.903 86.4844 179.337 85.5176 179.337 84.2637C179.337 83.0098 178.903 82.0488 178.036 81.3809C177.181 80.7012 175.95 80.3613 174.345 80.3613H169.476V88.166ZM211.049 98.6953C209.818 99.8906 208.359 100.828 206.672 101.508C204.984 102.188 203.15 102.527 201.17 102.527C199.166 102.527 197.32 102.188 195.633 101.508C193.945 100.816 192.474 99.8555 191.22 98.625C189.978 97.3828 189.011 95.9297 188.32 94.2656C187.629 92.6016 187.283 90.7852 187.283 88.8164C187.283 86.8477 187.629 85.0312 188.32 83.3672C189.011 81.6914 189.978 80.2383 191.22 79.0078C192.474 77.7773 193.945 76.8223 195.633 76.1426C197.32 75.4512 199.166 75.1055 201.17 75.1055C203.138 75.1055 204.961 75.4453 206.636 76.125C208.324 76.8047 209.783 77.748 211.013 78.9551L207.234 82.752C206.496 81.8496 205.594 81.1406 204.527 80.625C203.472 80.0977 202.324 79.834 201.082 79.834C199.898 79.834 198.802 80.0625 197.795 80.5195C196.799 80.9648 195.926 81.5977 195.176 82.418C194.426 83.2266 193.845 84.1758 193.435 85.2656C193.025 86.3555 192.82 87.5332 192.82 88.7988C192.82 90.0879 193.025 91.2773 193.435 92.3672C193.845 93.457 194.426 94.4121 195.176 95.2324C195.926 96.041 196.799 96.6738 197.795 97.1309C198.802 97.5762 199.898 97.7988 201.082 97.7988C202.324 97.7988 203.472 97.541 204.527 97.0254C205.582 96.498 206.478 95.7832 207.217 94.8809L211.049 98.6953ZM219.082 102H213.668V75.6328H219.082V86.6543H230.491V75.6328H235.905V102H230.491V91.3828H219.082V102ZM246.928 102V75.6328H263.943V80.3613H252.342V86.3555H263.223V91.1016H252.342V97.2715H264.119V102H246.928ZM291.471 102H285.249L272.926 84V102H267.512V75.6328H273.735L286.057 93.668V75.6328H291.471V102ZM295.058 102V75.6328H303.689C306.876 75.6328 309.636 76.1719 311.968 77.25C314.3 78.3281 316.105 79.8516 317.382 81.8203C318.66 83.7891 319.298 86.1211 319.298 88.8164C319.298 91.5 318.66 93.832 317.382 95.8125C316.105 97.7812 314.3 99.3047 311.968 100.383C309.636 101.461 306.876 102 303.689 102H295.058ZM300.472 97.2715H303.882C305.992 97.2715 307.779 96.9434 309.244 96.2871C310.72 95.6191 311.839 94.6582 312.601 93.4043C313.374 92.1387 313.761 90.6094 313.761 88.8164C313.761 87.0117 313.374 85.4824 312.601 84.2285C311.839 82.9746 310.72 82.0195 309.244 81.3633C307.779 80.6953 305.992 80.3613 303.882 80.3613H300.472V97.2715ZM320.74 99.1523L323.307 95.0215C324.115 95.6777 324.895 96.2168 325.645 96.6387C326.406 97.0488 327.156 97.3535 327.895 97.5527C328.633 97.7402 329.389 97.834 330.162 97.834C331.076 97.834 331.867 97.7051 332.535 97.4473C333.203 97.1895 333.719 96.8203 334.082 96.3398C334.457 95.8594 334.645 95.3027 334.645 94.6699C334.645 93.9316 334.41 93.3105 333.941 92.8066C333.473 92.3027 332.857 91.8633 332.096 91.4883C331.346 91.1016 330.531 90.7324 329.652 90.3809C328.797 90.0293 327.936 89.6484 327.068 89.2383C326.213 88.8164 325.422 88.3184 324.695 87.7441C323.981 87.1699 323.4 86.4727 322.955 85.6523C322.522 84.8203 322.305 83.8125 322.305 82.6289C322.305 81.082 322.691 79.7461 323.465 78.6211C324.25 77.4961 325.322 76.6289 326.682 76.0195C328.041 75.4102 329.594 75.1055 331.34 75.1055C332.57 75.1055 333.848 75.2695 335.172 75.5977C336.508 75.9258 337.838 76.4238 339.162 77.0918L337.035 81.4688C336.203 80.9648 335.307 80.5664 334.346 80.2734C333.385 79.9805 332.482 79.834 331.639 79.834C330.877 79.834 330.209 79.9512 329.635 80.1855C329.072 80.4199 328.633 80.748 328.316 81.1699C328 81.5801 327.842 82.0664 327.842 82.6289C327.842 83.2969 328.07 83.877 328.527 84.3691C328.984 84.8496 329.576 85.2773 330.303 85.6523C331.041 86.0273 331.832 86.4023 332.676 86.7773C333.543 87.1523 334.416 87.5625 335.295 88.0078C336.186 88.4531 336.994 88.9805 337.721 89.5898C338.459 90.1875 339.051 90.9082 339.496 91.752C339.953 92.584 340.182 93.5859 340.182 94.7578C340.182 96.3047 339.772 97.6641 338.951 98.8359C338.131 99.9961 336.988 100.904 335.523 101.561C334.059 102.205 332.354 102.527 330.408 102.527C328.627 102.527 326.922 102.24 325.293 101.666C323.664 101.092 322.147 100.254 320.74 99.1523ZM361.699 102H356.285V80.3613H348.515V75.6328H369.486V80.3613H361.699V102ZM384.252 102.527C382.248 102.527 380.397 102.188 378.698 101.508C377.01 100.816 375.539 99.8555 374.285 98.625C373.043 97.3828 372.076 95.9297 371.385 94.2656C370.705 92.6016 370.365 90.7852 370.365 88.8164C370.365 86.8477 370.705 85.0312 371.385 83.3672C372.076 81.6914 373.043 80.2383 374.285 79.0078C375.539 77.7656 377.01 76.8047 378.698 76.125C380.397 75.4453 382.248 75.1055 384.252 75.1055C386.256 75.1055 388.102 75.4512 389.789 76.1426C391.477 76.8223 392.936 77.7773 394.166 79.0078C395.408 80.2383 396.375 81.6855 397.067 83.3496C397.758 85.0137 398.104 86.8359 398.104 88.8164C398.104 90.7852 397.758 92.6074 397.067 94.2832C396.387 95.9473 395.426 97.3945 394.184 98.625C392.942 99.8555 391.477 100.816 389.789 101.508C388.102 102.188 386.256 102.527 384.252 102.527ZM384.252 97.7988C385.436 97.7988 386.531 97.5703 387.539 97.1133C388.559 96.6562 389.444 96.0234 390.194 95.2148C390.944 94.3945 391.524 93.4453 391.934 92.3672C392.356 91.2773 392.567 90.0938 392.567 88.8164C392.567 87.5391 392.356 86.3555 391.934 85.2656C391.524 84.1758 390.944 83.2266 390.194 82.418C389.444 81.5977 388.559 80.9648 387.539 80.5195C386.531 80.0625 385.436 79.834 384.252 79.834C383.057 79.834 381.949 80.0625 380.93 80.5195C379.922 80.9648 379.037 81.5977 378.276 82.418C377.526 83.2266 376.94 84.1758 376.518 85.2656C376.108 86.3555 375.903 87.5391 375.903 88.8164C375.903 90.0938 376.108 91.2773 376.518 92.3672C376.94 93.457 377.526 94.4121 378.276 95.2324C379.037 96.041 379.922 96.6738 380.93 97.1309C381.949 97.5762 383.057 97.7988 384.252 97.7988ZM400.759 102V75.6328H409.39C412.577 75.6328 415.337 76.1719 417.669 77.25C420.001 78.3281 421.806 79.8516 423.083 81.8203C424.36 83.7891 424.999 86.1211 424.999 88.8164C424.999 91.5 424.36 93.832 423.083 95.8125C421.806 97.7812 420.001 99.3047 417.669 100.383C415.337 101.461 412.577 102 409.39 102H400.759ZM406.173 97.2715H409.583C411.692 97.2715 413.479 96.9434 414.944 96.2871C416.421 95.6191 417.54 94.6582 418.302 93.4043C419.075 92.1387 419.462 90.6094 419.462 88.8164C419.462 87.0117 419.075 85.4824 418.302 84.2285C417.54 82.9746 416.421 82.0195 414.944 81.3633C413.479 80.6953 411.692 80.3613 409.583 80.3613H406.173V97.2715ZM431.099 102H425.422L435.933 75.6328H441.646L452.14 102H446.463L444.3 96.3398H433.261L431.099 102ZM435.037 91.5938H442.543L438.781 81.8203L435.037 91.5938ZM464.358 102H458.944V90.7324L448.959 75.6328H455.534L461.616 85.9688L467.768 75.6328H474.342L464.358 90.75V102ZM479.528 94.7578H476.786L476.101 75.6328H480.214L479.528 94.7578ZM478.14 102.352C477.472 102.352 476.909 102.123 476.452 101.666C475.995 101.209 475.767 100.658 475.767 100.014C475.767 99.3574 475.995 98.8066 476.452 98.3613C476.909 97.9043 477.472 97.6758 478.14 97.6758C478.819 97.6758 479.388 97.9043 479.845 98.3613C480.314 98.8066 480.548 99.3574 480.548 100.014C480.548 100.658 480.314 101.209 479.845 101.666C479.388 102.123 478.819 102.352 478.14 102.352Z"
              fill="#101828"
            />
            <path
              d="M454 116.501C666.758 61.5806 438.635 45.7403 360.012 68.7953C244.692 102.611 241.242 171.421 454 116.501Z"
              stroke="#1559CB"
              strokeWidth="4"
            />
            <path
              d="M27 23L16.5 1M14.5 23L1 20.5M44.5 23V5"
              stroke="#1559CB"
              strokeWidth="4"
            />
          </svg>
        </div>

        <div className="flex flex-col md:flex-row gap-8">
          {/* Left Column - Video and Guarantee */}
          <div className="md:w-1/2">
            {/* YouTube Video */}
            <div
              className="relative pb-[56.25%] h-0 overflow-hidden rounded shadow-sm mb-6"
              ref={videoRef}
            >
              <iframe
                className="absolute top-0 left-0 w-full h-full"
                // src="https://www.youtube.com/embed/h6XYpPefAKg"
                src="https://www.youtube.com/embed/oRCGjicLWkQ"
                title="How I Landed 5 Job Offers Without Lifting a Finger | The AI Tool That Does It ALL | #JobSearchHack"
                frameborder="0"
                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                referrerpolicy="strict-origin-when-cross-origin"
                allowfullscreen
              ></iframe>
            </div>

            {/* Money-back guarantee */}
            <div>
              <div className="flex items-start">
                <span className="text-blue-600 mr-2"></span>
                <div>
                  <p className="text-sm font-medium mb-1">
                    <span className="!text-blue-600">*</span> Money-back
                    guarantee
                  </p>
                  <p className="text-sm text-gray-600 leading-relaxed">
                    {` At Lightforth, our automated job application service and
                    customized job recommendations. If you're not satisfied
                    during your trial, cancel your subscription or simply
                    contact us.`}
                  </p>
                </div>
              </div>
            </div>
          </div>

          {/* Right Column - Form */}
          <div className="md:w-1/2">
            <div className="bg-white p-6 rounded-lg shadow-sm border border-gray-200">
              <h2 className="text-lg font-semibold mb-6">
                CONFIRM YOUR DETAILS
                <br />
                FOR YOUR FREE ACCESS.
              </h2>

              <form onSubmit={handleSubmit}>
                <div className="grid md:grid-cols-2 gap-4 mb-4">
                  <div>
                    <label
                      htmlFor="firstName"
                      className="block text-sm font-medium text-gray-700 mb-1"
                    >
                      First Name
                    </label>
                    <input
                      type="text"
                      id="firstName"
                      name="firstName"
                      value={formData.firstName}
                      onChange={handleInputChange}
                      className="w-full p-3 border border-gray-300 rounded text-sm"
                      required
                      placeholder="Enter your First Name"
                    />
                  </div>
                  <div>
                    <label
                      htmlFor="lastName"
                      className="block text-sm font-medium text-gray-700 mb-1"
                    >
                      Last Name
                    </label>
                    <input
                      type="text"
                      id="lastName"
                      name="lastName"
                      value={formData.lastName}
                      onChange={handleInputChange}
                      className="w-full p-3 border border-gray-300 rounded text-sm"
                      required
                      placeholder="Enter your Last Name"
                    />
                  </div>
                </div>

                <div className="mb-6">
                  <label
                    htmlFor="email"
                    className="block text-sm font-medium text-gray-700 mb-1"
                  >
                    Email
                  </label>
                  <input
                    type="email"
                    id="email"
                    name="email"
                    value={formData.email}
                    onChange={handleInputChange}
                    className="w-full p-3 border border-gray-300 rounded text-sm"
                    required
                    placeholder="Enter a Valid Email"
                  />
                  {error && (
                    <div className="mt-4 text-red-600 text-sm">{error}</div>
                  )}
                </div>

                {/* Information box */}
                <AnimatePresence>
                  {formData.email && (
                    <motion.div
                      initial={{ opacity: 0 }}
                      animate={{ opacity: 1 }}
                      exit={{ opacity: 0 }}
                      transition={{ duration: 0.5 }}
                      className="bg-blue-50 border border-blue-200 rounded-md p-4 mb-6"
                    >
                      <div className="flex">
                        <div>
                          <p className="text-xs text-blue-800">
                            {`After successful verification, we'll send a temporary
                      password to your email address. You can use this to log
                      in and enjoy your 3-day free trial.`}
                          </p>
                        </div>
                      </div>
                    </motion.div>
                  )}
                </AnimatePresence>

                {/* Submit Button */}
                <button
                  type="submit"
                  disabled={
                    isLoading ||
                    !formData.firstName ||
                    !formData.lastName ||
                    !formData.email
                  }
                  className={`cursor-pointer w-full bg-[#1b9dfc] hover:bg-blue-600 text-white text-base font-medium py-4 rounded transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center `}
                >
                  {isLoading ? (
                    <p className="flex items-center gap-x-2">
                      <TbLoader2 className="animate-spin transform transition-normal ease-in-out mx-auto text-xl" />
                      <span>Processing...</span>
                    </p>
                  ) : (
                    "Go to Step #3"
                  )}
                </button>
              </form>
            </div>
          </div>
        </div>

        {/* Timer */}
        <div className="text-center pt-5 md:text-left">
          <p className="text-sm font-medium text-gray-600 mb-1">
            THIS OFFER ENDS IN
          </p>
          <p className="text-4xl font-bold text-blue-500">
            <CountdownTimer durationInMinutes={7} className="text-[#0494FC]" />
          </p>
        </div>
      </div>
    </div>
  );
};

export default VerificationPage;
